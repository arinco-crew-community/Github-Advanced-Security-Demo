name: 02 - DAST Integration (OWASP)
# on: [push]
on: 
  workflow_dispatch:

jobs:     
  Build-App-Container:
    runs-on: ubuntu-latest
    steps:
      - name: "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
        run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Configure environment variables
        uses: ./.github/actions/setvars
        with:
          varFilePath: ./.github/variables/*
      
      - name: Login to Azure
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_LOGIN_SECRET }}

      - name: Build Demo container
        run: |
          cd ${{ github.workspace }}/app
          az acr login --name $acr_name
          echo "github.sha=$GITHUB_SHA"
          docker build . -t $acr_name.azurecr.io/containers/$ghsecure_container_name:$ghsecure_container_version-${{ github.sha }}
          docker push $acr_name.azurecr.io/containers/$ghsecure_container_name:$ghsecure_container_version-${{ github.sha }}

  Deploy-App-Container-npd:
    runs-on: ubuntu-latest
    needs: Build-App-Container
    steps:
      - name: "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
        run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Configure environment variables
        uses: ./.github/actions/setvars
        with:
          varFilePath: ./.github/variables/*
      
      - name: Login to Azure
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_LOGIN_SECRET }}

      - name: Deploy Issuer container
        env:
          AZURE_SERVICE_PRINCIPAL_CLIENT_ID: ${{ secrets.AZURE_SERVICE_PRINCIPAL_CLIENT_ID }}
          AZURE_SERVICE_PRINCIPAL_CLIENT_SECRET: ${{ secrets.AZURE_SERVICE_PRINCIPAL_CLIENT_SECRET }}
        run: |
          az container create --registry-login-server "$acr_name.azurecr.io" --registry-username "$AZURE_SERVICE_PRINCIPAL_CLIENT_ID" --registry-password "$AZURE_SERVICE_PRINCIPAL_CLIENT_SECRET" --resource-group "$secure_shared_rgp" --name "$ghsecure_aci_name_npd" --image "$acr_name.azurecr.io/containers/$ghsecure_container_name:$ghsecure_container_version-${{ github.sha }}" --dns-name-label $ghsecure_aci_name_npd --ports 80 443 9090 --query ipAddress.fqdn

  Scan-deployed-Container:
    environment:
      name: production_environment
    runs-on: ubuntu-latest
    needs: Deploy-App-Container-npd
    steps:
      - name: OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.4.0
        with:
          target: 'http://npd-dvwa.demo.arinco.com.au:9090'
          fail_action: true
          issue_title: "Security Issue Found - DVWA Non-Prod"
  
  Deploy-App-Container-prd:
    runs-on: ubuntu-latest
    needs: Scan-deployed-Container
    steps:
      - name: "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
        run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Configure environment variables
        uses: ./.github/actions/setvars
        with:
          varFilePath: ./.github/variables/*
      
      - name: Login to Azure
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_LOGIN_SECRET }}

      - name: Deploy Issuer container
        env:
          AZURE_SERVICE_PRINCIPAL_CLIENT_ID: ${{ secrets.AZURE_SERVICE_PRINCIPAL_CLIENT_ID }}
          AZURE_SERVICE_PRINCIPAL_CLIENT_SECRET: ${{ secrets.AZURE_SERVICE_PRINCIPAL_CLIENT_SECRET }}
        run: |
          az container create --registry-login-server "$acr_name.azurecr.io" --registry-username "$AZURE_SERVICE_PRINCIPAL_CLIENT_ID" --registry-password "$AZURE_SERVICE_PRINCIPAL_CLIENT_SECRET" --resource-group "$secure_shared_rgp" --name "$ghsecure_aci_name_prd" --image "appsecco/dvna:sqlite" --dns-name-label $ghsecure_aci_name_prd --ports 80 443 9090 --query ipAddress.fqdn
  
